#ifndef __OCARINA_GENERATED_DEPLOYMENT_H_
#define __OCARINA_GENERATED_DEPLOYMENT_H_ 
#include <po_hi_types.h>
/*****************************************************/

/*  This file was automatically generated by Ocarina */

/*  Do NOT hand-modify this file, as your            */

/*  changes will be lost when you re-run Ocarina     */

/*****************************************************/

#define __PO_HI_MY_NODE the_controller_k

#define __po_hi_thread_weight_nb_ports 2

#define __po_hi_thread_height_nb_ports 2

#define __po_hi_thread_rotor_nb_ports 2

#define __po_hi_thread_radar_nb_ports 2

#define __po_hi_thread_gps_nb_ports 2

#define __po_hi_thread_set_target_nb_ports 2

#define __po_hi_thread_analyse_data_nb_ports 8

/*  For each node in the distributed application add an enumerator*/

typedef enum
{
  the_controller_k = 0
} __po_hi_node_t;

typedef enum
{
  invalid_protocol = -1
} __po_hi_protocol_t;

/*  For each thread in the distributed application nodes, add an enumerator*/

typedef enum
{
  the_controller_thread_weight_k_entity = 0,
  the_controller_thread_height_k_entity = 1,
  the_controller_thread_rotor_k_entity = 2,
  the_controller_thread_radar_k_entity = 3,
  the_controller_thread_gps_k_entity = 4,
  the_controller_thread_set_target_k_entity = 5,
  the_controller_thread_analyse_data_k_entity = 6,
  invalid_entity = -1
} __po_hi_entity_t;

typedef enum
{
  the_controller_thread_weight_k = 0,
  the_controller_thread_height_k = 1,
  the_controller_thread_rotor_k = 2,
  the_controller_thread_radar_k = 3,
  the_controller_thread_gps_k = 4,
  the_controller_thread_set_target_k = 5,
  the_controller_thread_analyse_data_k = 6,
  invalid_task_id = -1
} __po_hi_task_id;

typedef enum
{
  invalid_device_id = -1
} __po_hi_device_id;

typedef enum
{
  invalid_bus_id = -1,
  bus_the_bus = 0
} __po_hi_bus_id;

#define __PO_HI_NB_TASKS 7

#define __PO_HI_TASKS_STACK 0

#define __PO_HI_NB_PROTECTED 0

#define __PO_HI_NB_NODES 1

#define __PO_HI_NB_ENTITIES 7

#define __PO_HI_NB_PORTS 20

typedef enum
{
  thread_weight_global_weight_in = 0,
  thread_weight_global_weight_out = 1,
  thread_height_global_height_in = 2,
  thread_height_global_height_out = 3,
  thread_rotor_global_rotor_power_in = 4,
  thread_rotor_global_rotor_power_out = 5,
  thread_radar_global_blockade_in = 6,
  thread_radar_global_blockade_out = 7,
  thread_gps_global_location_in = 8,
  thread_gps_global_location_out = 9,
  thread_set_target_global_new_target_in = 10,
  thread_set_target_global_new_target_out = 11,
  thread_analyse_data_global_location_in = 12,
  thread_analyse_data_global_height_in = 13,
  thread_analyse_data_global_weight_in = 14,
  thread_analyse_data_global_rotor_power_out = 15,
  thread_analyse_data_global_rotor_power_in = 16,
  thread_analyse_data_global_blockade_in = 17,
  thread_analyse_data_global_status_change = 18,
  thread_analyse_data_global_new_target = 19,
  invalid_port_t = -1,
  constant_out_identifier = 21
} __po_hi_port_t;

typedef enum
{
  thread_weight_local_weight_in = 0,
  thread_weight_local_weight_out = 1,
  thread_height_local_height_in = 0,
  thread_height_local_height_out = 1,
  thread_rotor_local_rotor_power_in = 0,
  thread_rotor_local_rotor_power_out = 1,
  thread_radar_local_blockade_in = 0,
  thread_radar_local_blockade_out = 1,
  thread_gps_local_location_in = 0,
  thread_gps_local_location_out = 1,
  thread_set_target_local_new_target_in = 0,
  thread_set_target_local_new_target_out = 1,
  thread_analyse_data_local_location_in = 0,
  thread_analyse_data_local_height_in = 1,
  thread_analyse_data_local_weight_in = 2,
  thread_analyse_data_local_rotor_power_out = 3,
  thread_analyse_data_local_rotor_power_in = 4,
  thread_analyse_data_local_blockade_in = 5,
  thread_analyse_data_local_status_change = 6,
  thread_analyse_data_local_new_target = 7,
  invalid_local_port_t = -1
} __po_hi_local_port_t;

#define __PO_HI_NB_DEVICES 0

#define __PO_HI_NB_BUSES 1

#define __PO_HI_NB_PROTOCOLS 0

#define __PO_HI_PORT_TYPE_CONTENT __po_hi_thread_weight_nb_ports, __po_hi_thread_height_nb_ports, __po_hi_thread_rotor_nb_ports, __po_hi_thread_radar_nb_ports, __po_hi_thread_gps_nb_ports, __po_hi_thread_set_target_nb_ports, __po_hi_thread_analyse_data_nb_ports

#endif
